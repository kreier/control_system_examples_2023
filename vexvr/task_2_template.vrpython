{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nimport math\nimport random\nfrom vexcode_vr import *\n\n# Brain should be defined by default\nbrain=Brain()\n\ndrivetrain = Drivetrain(\"drivetrain\", 0)\npen = Pen(\"pen\", 8)\npen.set_pen_width(THIN)\nleft_bumper = Bumper(\"leftBumper\", 2)\nright_bumper = Bumper(\"rightBumper\", 3)\nfront_eye = EyeSensor(\"frontEye\", 4)\ndown_eye = EyeSensor(\"downEye\", 5)\nfront_distance = Distance(\"frontdistance\", 6)\ndistance = front_distance\nmagnet = Electromagnet(\"magnet\", 7)\nlocation = Location(\"location\", 9)\n#endregion VEXcode Generated Robot Configuration\n# ------------------------------------------\n# \n# \tProject:      VEXcode Project\n#\tAuthor:       VEX\n#\tCreated:      2023/02/23\n#\tDescription:  Task 2 Template\n# \n# ------------------------------------------\n\ndef generateRandomPoint():\n    xCoordinate = randint(-4,8)*100\n    yCoordinate = randint(-4,8)*100\n    return [xCoordinate,yCoordinate]\ndef driveXDistance(setpoint,duration):\n    # reset the timer\n    brain.timer_reset()\n\n    # loop while the timer is less than the duration input of the function.\n    while(brain.timer_time(SECONDS)<duration):\n        # Your code goes here!\n        \n\n\n\n\n\n\n\n\n\n        #VEXCode VR requires that we have a small pause in any loop we run.    \n        wait(1,MSEC)\n    drivetrain.stop()\n\ndef driveYDistance(setpoint,duration):\n    # reset the timer\n    brain.timer_reset()\n\n    # loop while the timer is less than the duration input of the function.\n    while(brain.timer_time(SECONDS)<duration):\n        # Your code goes here!\n        \n\n\n\n\n\n\n\n\n\n        #VEXCode VR requires that we have a small pause in any loop we run.    \n        wait(1,MSEC)\n    drivetrain.stop()\n\n\ndef driveUsingDistanceSensor(setpoint,duration):\n    # reset the timer\n    brain.timer_reset()\n\n    # loop while the timer is less than the duration input of the function.\n    while(brain.timer_time(SECONDS)<duration):\n        # Your code goes here!\n        \n\n\n\n\n\n\n\n\n\n        #VEXCode VR requires that we have a small pause in any loop we run.    \n        wait(1,MSEC)\n    drivetrain.stop()\n\n# Add project code in \"main\"\ndef main():\n    # You should not change much in the code below. This code chooses a random point, puts the pen down,\n    # and then calls the above functions to move to the point, turn to face the right wall, and then move the specified distance away.\n    target = generateRandomPoint()\n    brain.print(\"target location is x = ( \" + str(target[0]) + \" , \" + str(target[1]) + \" )\" )\n    pen.move(DOWN)\n    drivetrain.turn_to_heading(90,DEGREES,wait=True)\n    driveXDistance(target[0],4)\n    drivetrain.turn_to_heading(0,DEGREES,wait=True)\n    driveYDistance(target[1],4)\n    drivetrain.turn_to_heading(90,DEGREES,wait=True)\n    driveUsingDistanceSensor(200,5)\n# VR threads â€” Do not delete\nvr_thread(main())\n\n","textLanguage":"python","rconfig":[],"slot":0,"platform":"PG","sdkVersion":"20220726.10.00.00","appVersion":"2.4.6","minVersion":"2.4.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","playground":"Grid","robotModel":"vr","target":"Physical"}